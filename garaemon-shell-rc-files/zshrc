# -*- mode: shell-script -*-
# -*- coding: utf-8 -*-
umask 022

#zsh
autoload -U colors
colors
autoload -U compinit
compinit
setopt correct
setopt beep

setopt list_types
setopt auto_list
setopt auto_menu
setopt magic_equal_subst
setopt auto_cd
setopt auto_param_keys
setopt pushd_ignore_dups
setopt auto_pushd

watch="all"
log

local GREEN=$'%{\e[1;32m%}'
local YELLOW=$'%{\e[1;33m%}'
local BLUE=$'%{\e[1;34m%}'
local LIGHT_BLUE=$'%{\e[1;36m%}'
local DEFAULT=$'%{\e[1;0m%}'
if [ "$TERM" = "emacs" ] ; then
    PROMPT="${LIGHT_BLUE}Yes, Master${DEFAULT}@${GREEN}${HOST}?${DEFAULT} [${BLUE}%/${DEFAULT}]%% "
else
    PROMPT="${LIGHT_BLUE}Yes, Master${DEFAULT}@${GREEN}${HOST}?${DEFAULT} [${BLUE}%/${DEFAULT}]%% "
fi

PROMPT2="%_%% "
SPROMPT="%r? べ, 別にあんたのために修正したんじゃないからね! [n,y,a,e]:"

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data
bindkey -e

source $HOME/.sh.common

if [ -e $HOME/.zshrc.jsk ]; then
    echo loading jsk setup file ...
    source $HOME/.zshrc.jsk
fi

OS=`uname`
if [ "$OS" = "CYGWIN_NT-5.1" -o "$OS" = "CYGWIN_NT-6.0" ] ; then
    if [ -e $HOME/.zshrc.cygwin ]; then
        echo loading cygwin setup file ...
        source $HOME/.zshrc.cygwin
    fi
    if [ -e $HOME/.zshrc.cygwin.jsk ]; then
        echo loading jsk setup file ...
        source $HOME/.zshrc.cygwin.jsk
    fi
elif [ "$OS" = "Linux" ] ; then
    if [ -e $HOME/.zshrc.linux ]; then
        echo loading linux setup file ...
        source $HOME/.zshrc.linux
    fi
elif [ "$OS" = "Darwin" ] ; then
    if [ -e $HOME/.zshrc.darwin ]; then
        echo loading darwin setup file ...
        source $HOME/.zshrc.darwin
    fi
fi

# ros zshrc
if [ -e $HOME/.zshrc.cturtle.ros ]; then
    echo loading ros setup file ...
    source $HOME/.zshrc.cturtle.ros
fi

if [ "${TERM}" = screen-bce -o "${TERM}" = screen ]; then
    preexec() {
        echo -ne "\ek#${1%% *}\e\\"
    }
    precmd() {
        echo -ne "\ek$(basename $(pwd))\e\\"
        
    }
fi

if [ -e $HOME/.zshrc.kasabake.util ]; then
    source $HOME/.zshrc.kasabake.util
fi

# customizing zshrc?
if [ -e $HOME/.zshrc.mine ]; then
    echo loading customizing setup file ...
    source $HOME/.zshrc.mine
fi
